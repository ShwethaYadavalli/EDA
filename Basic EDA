import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

df = pd.read_csv(input.csv, delimiter = ',')
output_class = 'Class'
maximum_subplots_in_figure = 4

print(df.head())

num_rows = int(np.ceil(df.shape[1] /3))
df.plot(figsize=(10, 10),
        subplots=True,
        layout=(num_rows, 3),
        title='Visualization of the original data')
plt.show()

print(df.info())
print(df.describe())

# SEE HOW MANY MISSING VALUES WE HAVE
print(df.isnull().sum())

# Distribution of target variable
sns.countplot(x=output_class, data=df)
plt.title('Distribution of Target Variable')
plt.show()

# Correlation between variables
numeric_features = df.select_dtypes(include=['number'])
cor = numeric_features.corr()
sns.heatmap(cor, annot=True)
plt.title('Correlation Matrix')
plt.show()

# cor_target = abs(cor)
relevant_features = cor_target[cor_target > 0.2]  # Features with correlation > 0.2
relevant_features = relevant_features.drop(output_class)  # Exclude target variable itself

print("List of features with correlation greater than 0.2 with target variable:")
print(relevant_features.index.tolist())  # Print list of relevant features

# Distribution plots for numeric features
numeric_features = df.select_dtypes(include=[np.number]).columns
if len(numeric_features) > 0:
    plt.figure(figsize=(8, 5))
    count_plot = 1
    for feature in numeric_features:
        if count_plot >= 5:
            count_plot = 1
            plt.suptitle('Distribution of Numerical Features')
            plt.show()
        plt.subplot(4, 1, count_plot)
        sns.histplot(df[feature], kde=True)
        plt.ylabel(f'{feature}', rotation=90)
        count_plot = count_plot + 1
    plt.suptitle('Distribution of Numerical Features')
    plt.show()

# Count plots for categorical features
categorical_features = df.select_dtypes(include=[object]).columns
if len(categorical_features) > 0:
    count_cat = 1
    plt.figure(figsize=(8, 5))
    for feature in categorical_features:
        if count_plot >= 5:
            count_plot = 1
            plt.suptitle('Count plot of Categorical Features')
            plt.show()
        plt.subplot(4, 1, count_plot)
        sns.countplot(x=feature, data=df, hue=output_class)
        plt.ylabel(f'{feature}', rotation = 90)
        count_cat = count_cat + 1
    plt.title('Countplot of Categorical variables')
    plt.show()
